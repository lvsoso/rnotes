/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContentsResponse ContentsResponse contains information about a repo's entry's (dir, file, symlink, submodule) metadata and content
type ContentsResponse struct {
	Links *FileLinksResponse `json:"_links,omitempty"`
	// `content` is populated when `type` is `file`, otherwise null
	Content *string `json:"content,omitempty"`
	DownloadUrl *string `json:"download_url,omitempty"`
	// `encoding` is populated when `type` is `file`, otherwise null
	Encoding *string `json:"encoding,omitempty"`
	GitUrl *string `json:"git_url,omitempty"`
	HtmlUrl *string `json:"html_url,omitempty"`
	LastCommitSha *string `json:"last_commit_sha,omitempty"`
	Name *string `json:"name,omitempty"`
	Path *string `json:"path,omitempty"`
	Sha *string `json:"sha,omitempty"`
	Size *int64 `json:"size,omitempty"`
	// `submodule_git_url` is populated when `type` is `submodule`, otherwise null
	SubmoduleGitUrl *string `json:"submodule_git_url,omitempty"`
	// `target` is populated when `type` is `symlink`, otherwise null
	Target *string `json:"target,omitempty"`
	// `type` will be `file`, `dir`, `symlink`, or `submodule`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewContentsResponse instantiates a new ContentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentsResponse() *ContentsResponse {
	this := ContentsResponse{}
	return &this
}

// NewContentsResponseWithDefaults instantiates a new ContentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentsResponseWithDefaults() *ContentsResponse {
	this := ContentsResponse{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ContentsResponse) GetLinks() FileLinksResponse {
	if o == nil || o.Links == nil {
		var ret FileLinksResponse
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetLinksOk() (*FileLinksResponse, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ContentsResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given FileLinksResponse and assigns it to the Links field.
func (o *ContentsResponse) SetLinks(v FileLinksResponse) {
	o.Links = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ContentsResponse) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ContentsResponse) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ContentsResponse) SetContent(v string) {
	o.Content = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *ContentsResponse) GetDownloadUrl() string {
	if o == nil || o.DownloadUrl == nil {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetDownloadUrlOk() (*string, bool) {
	if o == nil || o.DownloadUrl == nil {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *ContentsResponse) HasDownloadUrl() bool {
	if o != nil && o.DownloadUrl != nil {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *ContentsResponse) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *ContentsResponse) GetEncoding() string {
	if o == nil || o.Encoding == nil {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetEncodingOk() (*string, bool) {
	if o == nil || o.Encoding == nil {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *ContentsResponse) HasEncoding() bool {
	if o != nil && o.Encoding != nil {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *ContentsResponse) SetEncoding(v string) {
	o.Encoding = &v
}

// GetGitUrl returns the GitUrl field value if set, zero value otherwise.
func (o *ContentsResponse) GetGitUrl() string {
	if o == nil || o.GitUrl == nil {
		var ret string
		return ret
	}
	return *o.GitUrl
}

// GetGitUrlOk returns a tuple with the GitUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetGitUrlOk() (*string, bool) {
	if o == nil || o.GitUrl == nil {
		return nil, false
	}
	return o.GitUrl, true
}

// HasGitUrl returns a boolean if a field has been set.
func (o *ContentsResponse) HasGitUrl() bool {
	if o != nil && o.GitUrl != nil {
		return true
	}

	return false
}

// SetGitUrl gets a reference to the given string and assigns it to the GitUrl field.
func (o *ContentsResponse) SetGitUrl(v string) {
	o.GitUrl = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *ContentsResponse) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl == nil {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetHtmlUrlOk() (*string, bool) {
	if o == nil || o.HtmlUrl == nil {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *ContentsResponse) HasHtmlUrl() bool {
	if o != nil && o.HtmlUrl != nil {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *ContentsResponse) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

// GetLastCommitSha returns the LastCommitSha field value if set, zero value otherwise.
func (o *ContentsResponse) GetLastCommitSha() string {
	if o == nil || o.LastCommitSha == nil {
		var ret string
		return ret
	}
	return *o.LastCommitSha
}

// GetLastCommitShaOk returns a tuple with the LastCommitSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetLastCommitShaOk() (*string, bool) {
	if o == nil || o.LastCommitSha == nil {
		return nil, false
	}
	return o.LastCommitSha, true
}

// HasLastCommitSha returns a boolean if a field has been set.
func (o *ContentsResponse) HasLastCommitSha() bool {
	if o != nil && o.LastCommitSha != nil {
		return true
	}

	return false
}

// SetLastCommitSha gets a reference to the given string and assigns it to the LastCommitSha field.
func (o *ContentsResponse) SetLastCommitSha(v string) {
	o.LastCommitSha = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContentsResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContentsResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContentsResponse) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ContentsResponse) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ContentsResponse) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ContentsResponse) SetPath(v string) {
	o.Path = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *ContentsResponse) GetSha() string {
	if o == nil || o.Sha == nil {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetShaOk() (*string, bool) {
	if o == nil || o.Sha == nil {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *ContentsResponse) HasSha() bool {
	if o != nil && o.Sha != nil {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *ContentsResponse) SetSha(v string) {
	o.Sha = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ContentsResponse) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ContentsResponse) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *ContentsResponse) SetSize(v int64) {
	o.Size = &v
}

// GetSubmoduleGitUrl returns the SubmoduleGitUrl field value if set, zero value otherwise.
func (o *ContentsResponse) GetSubmoduleGitUrl() string {
	if o == nil || o.SubmoduleGitUrl == nil {
		var ret string
		return ret
	}
	return *o.SubmoduleGitUrl
}

// GetSubmoduleGitUrlOk returns a tuple with the SubmoduleGitUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetSubmoduleGitUrlOk() (*string, bool) {
	if o == nil || o.SubmoduleGitUrl == nil {
		return nil, false
	}
	return o.SubmoduleGitUrl, true
}

// HasSubmoduleGitUrl returns a boolean if a field has been set.
func (o *ContentsResponse) HasSubmoduleGitUrl() bool {
	if o != nil && o.SubmoduleGitUrl != nil {
		return true
	}

	return false
}

// SetSubmoduleGitUrl gets a reference to the given string and assigns it to the SubmoduleGitUrl field.
func (o *ContentsResponse) SetSubmoduleGitUrl(v string) {
	o.SubmoduleGitUrl = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ContentsResponse) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ContentsResponse) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ContentsResponse) SetTarget(v string) {
	o.Target = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ContentsResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ContentsResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ContentsResponse) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ContentsResponse) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentsResponse) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ContentsResponse) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ContentsResponse) SetUrl(v string) {
	o.Url = &v
}

func (o ContentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.DownloadUrl != nil {
		toSerialize["download_url"] = o.DownloadUrl
	}
	if o.Encoding != nil {
		toSerialize["encoding"] = o.Encoding
	}
	if o.GitUrl != nil {
		toSerialize["git_url"] = o.GitUrl
	}
	if o.HtmlUrl != nil {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if o.LastCommitSha != nil {
		toSerialize["last_commit_sha"] = o.LastCommitSha
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Sha != nil {
		toSerialize["sha"] = o.Sha
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.SubmoduleGitUrl != nil {
		toSerialize["submodule_git_url"] = o.SubmoduleGitUrl
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableContentsResponse struct {
	value *ContentsResponse
	isSet bool
}

func (v NullableContentsResponse) Get() *ContentsResponse {
	return v.value
}

func (v *NullableContentsResponse) Set(val *ContentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentsResponse(val *ContentsResponse) *NullableContentsResponse {
	return &NullableContentsResponse{value: val, isSet: true}
}

func (v NullableContentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


