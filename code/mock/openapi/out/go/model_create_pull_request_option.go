/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CreatePullRequestOption CreatePullRequestOption options when creating a pull request
type CreatePullRequestOption struct {
	Assignee *string `json:"assignee,omitempty"`
	Assignees *[]string `json:"assignees,omitempty"`
	Base *string `json:"base,omitempty"`
	Body *string `json:"body,omitempty"`
	DueDate *time.Time `json:"due_date,omitempty"`
	Head *string `json:"head,omitempty"`
	Labels *[]int64 `json:"labels,omitempty"`
	Milestone *int64 `json:"milestone,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewCreatePullRequestOption instantiates a new CreatePullRequestOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePullRequestOption() *CreatePullRequestOption {
	this := CreatePullRequestOption{}
	return &this
}

// NewCreatePullRequestOptionWithDefaults instantiates a new CreatePullRequestOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePullRequestOptionWithDefaults() *CreatePullRequestOption {
	this := CreatePullRequestOption{}
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetAssignee() string {
	if o == nil || o.Assignee == nil {
		var ret string
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetAssigneeOk() (*string, bool) {
	if o == nil || o.Assignee == nil {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasAssignee() bool {
	if o != nil && o.Assignee != nil {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given string and assigns it to the Assignee field.
func (o *CreatePullRequestOption) SetAssignee(v string) {
	o.Assignee = &v
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetAssignees() []string {
	if o == nil || o.Assignees == nil {
		var ret []string
		return ret
	}
	return *o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetAssigneesOk() (*[]string, bool) {
	if o == nil || o.Assignees == nil {
		return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasAssignees() bool {
	if o != nil && o.Assignees != nil {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []string and assigns it to the Assignees field.
func (o *CreatePullRequestOption) SetAssignees(v []string) {
	o.Assignees = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetBase() string {
	if o == nil || o.Base == nil {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetBaseOk() (*string, bool) {
	if o == nil || o.Base == nil {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasBase() bool {
	if o != nil && o.Base != nil {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *CreatePullRequestOption) SetBase(v string) {
	o.Base = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CreatePullRequestOption) SetBody(v string) {
	o.Body = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetDueDate() time.Time {
	if o == nil || o.DueDate == nil {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetDueDateOk() (*time.Time, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *CreatePullRequestOption) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetHead returns the Head field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetHead() string {
	if o == nil || o.Head == nil {
		var ret string
		return ret
	}
	return *o.Head
}

// GetHeadOk returns a tuple with the Head field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetHeadOk() (*string, bool) {
	if o == nil || o.Head == nil {
		return nil, false
	}
	return o.Head, true
}

// HasHead returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasHead() bool {
	if o != nil && o.Head != nil {
		return true
	}

	return false
}

// SetHead gets a reference to the given string and assigns it to the Head field.
func (o *CreatePullRequestOption) SetHead(v string) {
	o.Head = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetLabels() []int64 {
	if o == nil || o.Labels == nil {
		var ret []int64
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetLabelsOk() (*[]int64, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int64 and assigns it to the Labels field.
func (o *CreatePullRequestOption) SetLabels(v []int64) {
	o.Labels = &v
}

// GetMilestone returns the Milestone field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetMilestone() int64 {
	if o == nil || o.Milestone == nil {
		var ret int64
		return ret
	}
	return *o.Milestone
}

// GetMilestoneOk returns a tuple with the Milestone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetMilestoneOk() (*int64, bool) {
	if o == nil || o.Milestone == nil {
		return nil, false
	}
	return o.Milestone, true
}

// HasMilestone returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasMilestone() bool {
	if o != nil && o.Milestone != nil {
		return true
	}

	return false
}

// SetMilestone gets a reference to the given int64 and assigns it to the Milestone field.
func (o *CreatePullRequestOption) SetMilestone(v int64) {
	o.Milestone = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreatePullRequestOption) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePullRequestOption) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreatePullRequestOption) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreatePullRequestOption) SetTitle(v string) {
	o.Title = &v
}

func (o CreatePullRequestOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Assignee != nil {
		toSerialize["assignee"] = o.Assignee
	}
	if o.Assignees != nil {
		toSerialize["assignees"] = o.Assignees
	}
	if o.Base != nil {
		toSerialize["base"] = o.Base
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.DueDate != nil {
		toSerialize["due_date"] = o.DueDate
	}
	if o.Head != nil {
		toSerialize["head"] = o.Head
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Milestone != nil {
		toSerialize["milestone"] = o.Milestone
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePullRequestOption struct {
	value *CreatePullRequestOption
	isSet bool
}

func (v NullableCreatePullRequestOption) Get() *CreatePullRequestOption {
	return v.value
}

func (v *NullableCreatePullRequestOption) Set(val *CreatePullRequestOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePullRequestOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePullRequestOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePullRequestOption(val *CreatePullRequestOption) *NullableCreatePullRequestOption {
	return &NullableCreatePullRequestOption{value: val, isSet: true}
}

func (v NullableCreatePullRequestOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePullRequestOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


