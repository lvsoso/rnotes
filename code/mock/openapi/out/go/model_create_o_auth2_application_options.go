/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateOAuth2ApplicationOptions CreateOAuth2ApplicationOptions holds options to create an oauth2 application
type CreateOAuth2ApplicationOptions struct {
	ConfidentialClient *bool `json:"confidential_client,omitempty"`
	Name *string `json:"name,omitempty"`
	RedirectUris *[]string `json:"redirect_uris,omitempty"`
}

// NewCreateOAuth2ApplicationOptions instantiates a new CreateOAuth2ApplicationOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOAuth2ApplicationOptions() *CreateOAuth2ApplicationOptions {
	this := CreateOAuth2ApplicationOptions{}
	return &this
}

// NewCreateOAuth2ApplicationOptionsWithDefaults instantiates a new CreateOAuth2ApplicationOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOAuth2ApplicationOptionsWithDefaults() *CreateOAuth2ApplicationOptions {
	this := CreateOAuth2ApplicationOptions{}
	return &this
}

// GetConfidentialClient returns the ConfidentialClient field value if set, zero value otherwise.
func (o *CreateOAuth2ApplicationOptions) GetConfidentialClient() bool {
	if o == nil || o.ConfidentialClient == nil {
		var ret bool
		return ret
	}
	return *o.ConfidentialClient
}

// GetConfidentialClientOk returns a tuple with the ConfidentialClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOAuth2ApplicationOptions) GetConfidentialClientOk() (*bool, bool) {
	if o == nil || o.ConfidentialClient == nil {
		return nil, false
	}
	return o.ConfidentialClient, true
}

// HasConfidentialClient returns a boolean if a field has been set.
func (o *CreateOAuth2ApplicationOptions) HasConfidentialClient() bool {
	if o != nil && o.ConfidentialClient != nil {
		return true
	}

	return false
}

// SetConfidentialClient gets a reference to the given bool and assigns it to the ConfidentialClient field.
func (o *CreateOAuth2ApplicationOptions) SetConfidentialClient(v bool) {
	o.ConfidentialClient = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOAuth2ApplicationOptions) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOAuth2ApplicationOptions) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOAuth2ApplicationOptions) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOAuth2ApplicationOptions) SetName(v string) {
	o.Name = &v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *CreateOAuth2ApplicationOptions) GetRedirectUris() []string {
	if o == nil || o.RedirectUris == nil {
		var ret []string
		return ret
	}
	return *o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOAuth2ApplicationOptions) GetRedirectUrisOk() (*[]string, bool) {
	if o == nil || o.RedirectUris == nil {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *CreateOAuth2ApplicationOptions) HasRedirectUris() bool {
	if o != nil && o.RedirectUris != nil {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *CreateOAuth2ApplicationOptions) SetRedirectUris(v []string) {
	o.RedirectUris = &v
}

func (o CreateOAuth2ApplicationOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfidentialClient != nil {
		toSerialize["confidential_client"] = o.ConfidentialClient
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RedirectUris != nil {
		toSerialize["redirect_uris"] = o.RedirectUris
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOAuth2ApplicationOptions struct {
	value *CreateOAuth2ApplicationOptions
	isSet bool
}

func (v NullableCreateOAuth2ApplicationOptions) Get() *CreateOAuth2ApplicationOptions {
	return v.value
}

func (v *NullableCreateOAuth2ApplicationOptions) Set(val *CreateOAuth2ApplicationOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOAuth2ApplicationOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOAuth2ApplicationOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOAuth2ApplicationOptions(val *CreateOAuth2ApplicationOptions) *NullableCreateOAuth2ApplicationOptions {
	return &NullableCreateOAuth2ApplicationOptions{value: val, isSet: true}
}

func (v NullableCreateOAuth2ApplicationOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOAuth2ApplicationOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


