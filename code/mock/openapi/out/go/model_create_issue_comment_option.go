/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateIssueCommentOption CreateIssueCommentOption options for creating a comment on an issue
type CreateIssueCommentOption struct {
	Body string `json:"body"`
}

// NewCreateIssueCommentOption instantiates a new CreateIssueCommentOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIssueCommentOption(body string) *CreateIssueCommentOption {
	this := CreateIssueCommentOption{}
	this.Body = body
	return &this
}

// NewCreateIssueCommentOptionWithDefaults instantiates a new CreateIssueCommentOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIssueCommentOptionWithDefaults() *CreateIssueCommentOption {
	this := CreateIssueCommentOption{}
	return &this
}

// GetBody returns the Body field value
func (o *CreateIssueCommentOption) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *CreateIssueCommentOption) GetBodyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *CreateIssueCommentOption) SetBody(v string) {
	o.Body = v
}

func (o CreateIssueCommentOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableCreateIssueCommentOption struct {
	value *CreateIssueCommentOption
	isSet bool
}

func (v NullableCreateIssueCommentOption) Get() *CreateIssueCommentOption {
	return v.value
}

func (v *NullableCreateIssueCommentOption) Set(val *CreateIssueCommentOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIssueCommentOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIssueCommentOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIssueCommentOption(val *CreateIssueCommentOption) *NullableCreateIssueCommentOption {
	return &NullableCreateIssueCommentOption{value: val, isSet: true}
}

func (v NullableCreateIssueCommentOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIssueCommentOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


