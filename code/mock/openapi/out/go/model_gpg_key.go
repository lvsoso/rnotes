/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// GPGKey GPGKey a user GPG key to sign commit and tag in repository
type GPGKey struct {
	CanCertify *bool `json:"can_certify,omitempty"`
	CanEncryptComms *bool `json:"can_encrypt_comms,omitempty"`
	CanEncryptStorage *bool `json:"can_encrypt_storage,omitempty"`
	CanSign *bool `json:"can_sign,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Emails *[]GPGKeyEmail `json:"emails,omitempty"`
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	Id *int64 `json:"id,omitempty"`
	KeyId *string `json:"key_id,omitempty"`
	PrimaryKeyId *string `json:"primary_key_id,omitempty"`
	PublicKey *string `json:"public_key,omitempty"`
	Subkeys *[]GPGKey `json:"subkeys,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

// NewGPGKey instantiates a new GPGKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGPGKey() *GPGKey {
	this := GPGKey{}
	return &this
}

// NewGPGKeyWithDefaults instantiates a new GPGKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGPGKeyWithDefaults() *GPGKey {
	this := GPGKey{}
	return &this
}

// GetCanCertify returns the CanCertify field value if set, zero value otherwise.
func (o *GPGKey) GetCanCertify() bool {
	if o == nil || o.CanCertify == nil {
		var ret bool
		return ret
	}
	return *o.CanCertify
}

// GetCanCertifyOk returns a tuple with the CanCertify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetCanCertifyOk() (*bool, bool) {
	if o == nil || o.CanCertify == nil {
		return nil, false
	}
	return o.CanCertify, true
}

// HasCanCertify returns a boolean if a field has been set.
func (o *GPGKey) HasCanCertify() bool {
	if o != nil && o.CanCertify != nil {
		return true
	}

	return false
}

// SetCanCertify gets a reference to the given bool and assigns it to the CanCertify field.
func (o *GPGKey) SetCanCertify(v bool) {
	o.CanCertify = &v
}

// GetCanEncryptComms returns the CanEncryptComms field value if set, zero value otherwise.
func (o *GPGKey) GetCanEncryptComms() bool {
	if o == nil || o.CanEncryptComms == nil {
		var ret bool
		return ret
	}
	return *o.CanEncryptComms
}

// GetCanEncryptCommsOk returns a tuple with the CanEncryptComms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetCanEncryptCommsOk() (*bool, bool) {
	if o == nil || o.CanEncryptComms == nil {
		return nil, false
	}
	return o.CanEncryptComms, true
}

// HasCanEncryptComms returns a boolean if a field has been set.
func (o *GPGKey) HasCanEncryptComms() bool {
	if o != nil && o.CanEncryptComms != nil {
		return true
	}

	return false
}

// SetCanEncryptComms gets a reference to the given bool and assigns it to the CanEncryptComms field.
func (o *GPGKey) SetCanEncryptComms(v bool) {
	o.CanEncryptComms = &v
}

// GetCanEncryptStorage returns the CanEncryptStorage field value if set, zero value otherwise.
func (o *GPGKey) GetCanEncryptStorage() bool {
	if o == nil || o.CanEncryptStorage == nil {
		var ret bool
		return ret
	}
	return *o.CanEncryptStorage
}

// GetCanEncryptStorageOk returns a tuple with the CanEncryptStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetCanEncryptStorageOk() (*bool, bool) {
	if o == nil || o.CanEncryptStorage == nil {
		return nil, false
	}
	return o.CanEncryptStorage, true
}

// HasCanEncryptStorage returns a boolean if a field has been set.
func (o *GPGKey) HasCanEncryptStorage() bool {
	if o != nil && o.CanEncryptStorage != nil {
		return true
	}

	return false
}

// SetCanEncryptStorage gets a reference to the given bool and assigns it to the CanEncryptStorage field.
func (o *GPGKey) SetCanEncryptStorage(v bool) {
	o.CanEncryptStorage = &v
}

// GetCanSign returns the CanSign field value if set, zero value otherwise.
func (o *GPGKey) GetCanSign() bool {
	if o == nil || o.CanSign == nil {
		var ret bool
		return ret
	}
	return *o.CanSign
}

// GetCanSignOk returns a tuple with the CanSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetCanSignOk() (*bool, bool) {
	if o == nil || o.CanSign == nil {
		return nil, false
	}
	return o.CanSign, true
}

// HasCanSign returns a boolean if a field has been set.
func (o *GPGKey) HasCanSign() bool {
	if o != nil && o.CanSign != nil {
		return true
	}

	return false
}

// SetCanSign gets a reference to the given bool and assigns it to the CanSign field.
func (o *GPGKey) SetCanSign(v bool) {
	o.CanSign = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GPGKey) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GPGKey) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GPGKey) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *GPGKey) GetEmails() []GPGKeyEmail {
	if o == nil || o.Emails == nil {
		var ret []GPGKeyEmail
		return ret
	}
	return *o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetEmailsOk() (*[]GPGKeyEmail, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *GPGKey) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []GPGKeyEmail and assigns it to the Emails field.
func (o *GPGKey) SetEmails(v []GPGKeyEmail) {
	o.Emails = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *GPGKey) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *GPGKey) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *GPGKey) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GPGKey) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GPGKey) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GPGKey) SetId(v int64) {
	o.Id = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *GPGKey) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *GPGKey) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *GPGKey) SetKeyId(v string) {
	o.KeyId = &v
}

// GetPrimaryKeyId returns the PrimaryKeyId field value if set, zero value otherwise.
func (o *GPGKey) GetPrimaryKeyId() string {
	if o == nil || o.PrimaryKeyId == nil {
		var ret string
		return ret
	}
	return *o.PrimaryKeyId
}

// GetPrimaryKeyIdOk returns a tuple with the PrimaryKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetPrimaryKeyIdOk() (*string, bool) {
	if o == nil || o.PrimaryKeyId == nil {
		return nil, false
	}
	return o.PrimaryKeyId, true
}

// HasPrimaryKeyId returns a boolean if a field has been set.
func (o *GPGKey) HasPrimaryKeyId() bool {
	if o != nil && o.PrimaryKeyId != nil {
		return true
	}

	return false
}

// SetPrimaryKeyId gets a reference to the given string and assigns it to the PrimaryKeyId field.
func (o *GPGKey) SetPrimaryKeyId(v string) {
	o.PrimaryKeyId = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *GPGKey) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *GPGKey) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *GPGKey) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetSubkeys returns the Subkeys field value if set, zero value otherwise.
func (o *GPGKey) GetSubkeys() []GPGKey {
	if o == nil || o.Subkeys == nil {
		var ret []GPGKey
		return ret
	}
	return *o.Subkeys
}

// GetSubkeysOk returns a tuple with the Subkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetSubkeysOk() (*[]GPGKey, bool) {
	if o == nil || o.Subkeys == nil {
		return nil, false
	}
	return o.Subkeys, true
}

// HasSubkeys returns a boolean if a field has been set.
func (o *GPGKey) HasSubkeys() bool {
	if o != nil && o.Subkeys != nil {
		return true
	}

	return false
}

// SetSubkeys gets a reference to the given []GPGKey and assigns it to the Subkeys field.
func (o *GPGKey) SetSubkeys(v []GPGKey) {
	o.Subkeys = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *GPGKey) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GPGKey) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *GPGKey) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *GPGKey) SetVerified(v bool) {
	o.Verified = &v
}

func (o GPGKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanCertify != nil {
		toSerialize["can_certify"] = o.CanCertify
	}
	if o.CanEncryptComms != nil {
		toSerialize["can_encrypt_comms"] = o.CanEncryptComms
	}
	if o.CanEncryptStorage != nil {
		toSerialize["can_encrypt_storage"] = o.CanEncryptStorage
	}
	if o.CanSign != nil {
		toSerialize["can_sign"] = o.CanSign
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.KeyId != nil {
		toSerialize["key_id"] = o.KeyId
	}
	if o.PrimaryKeyId != nil {
		toSerialize["primary_key_id"] = o.PrimaryKeyId
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	if o.Subkeys != nil {
		toSerialize["subkeys"] = o.Subkeys
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	return json.Marshal(toSerialize)
}

type NullableGPGKey struct {
	value *GPGKey
	isSet bool
}

func (v NullableGPGKey) Get() *GPGKey {
	return v.value
}

func (v *NullableGPGKey) Set(val *GPGKey) {
	v.value = val
	v.isSet = true
}

func (v NullableGPGKey) IsSet() bool {
	return v.isSet
}

func (v *NullableGPGKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGPGKey(val *GPGKey) *NullableGPGKey {
	return &NullableGPGKey{value: val, isSet: true}
}

func (v NullableGPGKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGPGKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


