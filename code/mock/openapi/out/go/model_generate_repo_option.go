/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenerateRepoOption GenerateRepoOption options when creating repository using a template
type GenerateRepoOption struct {
	// include avatar of the template repo
	Avatar *bool `json:"avatar,omitempty"`
	// Default branch of the new repository
	DefaultBranch *string `json:"default_branch,omitempty"`
	// Description of the repository to create
	Description *string `json:"description,omitempty"`
	// include git content of default branch in template repo
	GitContent *bool `json:"git_content,omitempty"`
	// include git hooks in template repo
	GitHooks *bool `json:"git_hooks,omitempty"`
	// include labels in template repo
	Labels *bool `json:"labels,omitempty"`
	// Name of the repository to create
	Name string `json:"name"`
	// The organization or person who will own the new repository
	Owner string `json:"owner"`
	// Whether the repository is private
	Private *bool `json:"private,omitempty"`
	// include protected branches in template repo
	ProtectedBranch *bool `json:"protected_branch,omitempty"`
	// include topics in template repo
	Topics *bool `json:"topics,omitempty"`
	// include webhooks in template repo
	Webhooks *bool `json:"webhooks,omitempty"`
}

// NewGenerateRepoOption instantiates a new GenerateRepoOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateRepoOption(name string, owner string) *GenerateRepoOption {
	this := GenerateRepoOption{}
	this.Name = name
	this.Owner = owner
	return &this
}

// NewGenerateRepoOptionWithDefaults instantiates a new GenerateRepoOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateRepoOptionWithDefaults() *GenerateRepoOption {
	this := GenerateRepoOption{}
	return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetAvatar() bool {
	if o == nil || o.Avatar == nil {
		var ret bool
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetAvatarOk() (*bool, bool) {
	if o == nil || o.Avatar == nil {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasAvatar() bool {
	if o != nil && o.Avatar != nil {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given bool and assigns it to the Avatar field.
func (o *GenerateRepoOption) SetAvatar(v bool) {
	o.Avatar = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetDefaultBranch() string {
	if o == nil || o.DefaultBranch == nil {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetDefaultBranchOk() (*string, bool) {
	if o == nil || o.DefaultBranch == nil {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasDefaultBranch() bool {
	if o != nil && o.DefaultBranch != nil {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *GenerateRepoOption) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenerateRepoOption) SetDescription(v string) {
	o.Description = &v
}

// GetGitContent returns the GitContent field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetGitContent() bool {
	if o == nil || o.GitContent == nil {
		var ret bool
		return ret
	}
	return *o.GitContent
}

// GetGitContentOk returns a tuple with the GitContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetGitContentOk() (*bool, bool) {
	if o == nil || o.GitContent == nil {
		return nil, false
	}
	return o.GitContent, true
}

// HasGitContent returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasGitContent() bool {
	if o != nil && o.GitContent != nil {
		return true
	}

	return false
}

// SetGitContent gets a reference to the given bool and assigns it to the GitContent field.
func (o *GenerateRepoOption) SetGitContent(v bool) {
	o.GitContent = &v
}

// GetGitHooks returns the GitHooks field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetGitHooks() bool {
	if o == nil || o.GitHooks == nil {
		var ret bool
		return ret
	}
	return *o.GitHooks
}

// GetGitHooksOk returns a tuple with the GitHooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetGitHooksOk() (*bool, bool) {
	if o == nil || o.GitHooks == nil {
		return nil, false
	}
	return o.GitHooks, true
}

// HasGitHooks returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasGitHooks() bool {
	if o != nil && o.GitHooks != nil {
		return true
	}

	return false
}

// SetGitHooks gets a reference to the given bool and assigns it to the GitHooks field.
func (o *GenerateRepoOption) SetGitHooks(v bool) {
	o.GitHooks = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetLabels() bool {
	if o == nil || o.Labels == nil {
		var ret bool
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetLabelsOk() (*bool, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given bool and assigns it to the Labels field.
func (o *GenerateRepoOption) SetLabels(v bool) {
	o.Labels = &v
}

// GetName returns the Name field value
func (o *GenerateRepoOption) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GenerateRepoOption) SetName(v string) {
	o.Name = v
}

// GetOwner returns the Owner field value
func (o *GenerateRepoOption) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *GenerateRepoOption) SetOwner(v string) {
	o.Owner = v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *GenerateRepoOption) SetPrivate(v bool) {
	o.Private = &v
}

// GetProtectedBranch returns the ProtectedBranch field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetProtectedBranch() bool {
	if o == nil || o.ProtectedBranch == nil {
		var ret bool
		return ret
	}
	return *o.ProtectedBranch
}

// GetProtectedBranchOk returns a tuple with the ProtectedBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetProtectedBranchOk() (*bool, bool) {
	if o == nil || o.ProtectedBranch == nil {
		return nil, false
	}
	return o.ProtectedBranch, true
}

// HasProtectedBranch returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasProtectedBranch() bool {
	if o != nil && o.ProtectedBranch != nil {
		return true
	}

	return false
}

// SetProtectedBranch gets a reference to the given bool and assigns it to the ProtectedBranch field.
func (o *GenerateRepoOption) SetProtectedBranch(v bool) {
	o.ProtectedBranch = &v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetTopics() bool {
	if o == nil || o.Topics == nil {
		var ret bool
		return ret
	}
	return *o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetTopicsOk() (*bool, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given bool and assigns it to the Topics field.
func (o *GenerateRepoOption) SetTopics(v bool) {
	o.Topics = &v
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *GenerateRepoOption) GetWebhooks() bool {
	if o == nil || o.Webhooks == nil {
		var ret bool
		return ret
	}
	return *o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRepoOption) GetWebhooksOk() (*bool, bool) {
	if o == nil || o.Webhooks == nil {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *GenerateRepoOption) HasWebhooks() bool {
	if o != nil && o.Webhooks != nil {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given bool and assigns it to the Webhooks field.
func (o *GenerateRepoOption) SetWebhooks(v bool) {
	o.Webhooks = &v
}

func (o GenerateRepoOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Avatar != nil {
		toSerialize["avatar"] = o.Avatar
	}
	if o.DefaultBranch != nil {
		toSerialize["default_branch"] = o.DefaultBranch
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.GitContent != nil {
		toSerialize["git_content"] = o.GitContent
	}
	if o.GitHooks != nil {
		toSerialize["git_hooks"] = o.GitHooks
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.ProtectedBranch != nil {
		toSerialize["protected_branch"] = o.ProtectedBranch
	}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	if o.Webhooks != nil {
		toSerialize["webhooks"] = o.Webhooks
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateRepoOption struct {
	value *GenerateRepoOption
	isSet bool
}

func (v NullableGenerateRepoOption) Get() *GenerateRepoOption {
	return v.value
}

func (v *NullableGenerateRepoOption) Set(val *GenerateRepoOption) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateRepoOption) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateRepoOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateRepoOption(val *GenerateRepoOption) *NullableGenerateRepoOption {
	return &NullableGenerateRepoOption{value: val, isSet: true}
}

func (v NullableGenerateRepoOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateRepoOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


