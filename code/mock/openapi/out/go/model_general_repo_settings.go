/*
Gitea API

This documentation describes the Gitea API.

API version: {{AppVer | JSEscape | Safe}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GeneralRepoSettings GeneralRepoSettings contains global repository settings exposed by API
type GeneralRepoSettings struct {
	HttpGitDisabled *bool `json:"http_git_disabled,omitempty"`
	LfsDisabled *bool `json:"lfs_disabled,omitempty"`
	MigrationsDisabled *bool `json:"migrations_disabled,omitempty"`
	MirrorsDisabled *bool `json:"mirrors_disabled,omitempty"`
	StarsDisabled *bool `json:"stars_disabled,omitempty"`
	TimeTrackingDisabled *bool `json:"time_tracking_disabled,omitempty"`
}

// NewGeneralRepoSettings instantiates a new GeneralRepoSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralRepoSettings() *GeneralRepoSettings {
	this := GeneralRepoSettings{}
	return &this
}

// NewGeneralRepoSettingsWithDefaults instantiates a new GeneralRepoSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralRepoSettingsWithDefaults() *GeneralRepoSettings {
	this := GeneralRepoSettings{}
	return &this
}

// GetHttpGitDisabled returns the HttpGitDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetHttpGitDisabled() bool {
	if o == nil || o.HttpGitDisabled == nil {
		var ret bool
		return ret
	}
	return *o.HttpGitDisabled
}

// GetHttpGitDisabledOk returns a tuple with the HttpGitDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetHttpGitDisabledOk() (*bool, bool) {
	if o == nil || o.HttpGitDisabled == nil {
		return nil, false
	}
	return o.HttpGitDisabled, true
}

// HasHttpGitDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasHttpGitDisabled() bool {
	if o != nil && o.HttpGitDisabled != nil {
		return true
	}

	return false
}

// SetHttpGitDisabled gets a reference to the given bool and assigns it to the HttpGitDisabled field.
func (o *GeneralRepoSettings) SetHttpGitDisabled(v bool) {
	o.HttpGitDisabled = &v
}

// GetLfsDisabled returns the LfsDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetLfsDisabled() bool {
	if o == nil || o.LfsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.LfsDisabled
}

// GetLfsDisabledOk returns a tuple with the LfsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetLfsDisabledOk() (*bool, bool) {
	if o == nil || o.LfsDisabled == nil {
		return nil, false
	}
	return o.LfsDisabled, true
}

// HasLfsDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasLfsDisabled() bool {
	if o != nil && o.LfsDisabled != nil {
		return true
	}

	return false
}

// SetLfsDisabled gets a reference to the given bool and assigns it to the LfsDisabled field.
func (o *GeneralRepoSettings) SetLfsDisabled(v bool) {
	o.LfsDisabled = &v
}

// GetMigrationsDisabled returns the MigrationsDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetMigrationsDisabled() bool {
	if o == nil || o.MigrationsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.MigrationsDisabled
}

// GetMigrationsDisabledOk returns a tuple with the MigrationsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetMigrationsDisabledOk() (*bool, bool) {
	if o == nil || o.MigrationsDisabled == nil {
		return nil, false
	}
	return o.MigrationsDisabled, true
}

// HasMigrationsDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasMigrationsDisabled() bool {
	if o != nil && o.MigrationsDisabled != nil {
		return true
	}

	return false
}

// SetMigrationsDisabled gets a reference to the given bool and assigns it to the MigrationsDisabled field.
func (o *GeneralRepoSettings) SetMigrationsDisabled(v bool) {
	o.MigrationsDisabled = &v
}

// GetMirrorsDisabled returns the MirrorsDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetMirrorsDisabled() bool {
	if o == nil || o.MirrorsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.MirrorsDisabled
}

// GetMirrorsDisabledOk returns a tuple with the MirrorsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetMirrorsDisabledOk() (*bool, bool) {
	if o == nil || o.MirrorsDisabled == nil {
		return nil, false
	}
	return o.MirrorsDisabled, true
}

// HasMirrorsDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasMirrorsDisabled() bool {
	if o != nil && o.MirrorsDisabled != nil {
		return true
	}

	return false
}

// SetMirrorsDisabled gets a reference to the given bool and assigns it to the MirrorsDisabled field.
func (o *GeneralRepoSettings) SetMirrorsDisabled(v bool) {
	o.MirrorsDisabled = &v
}

// GetStarsDisabled returns the StarsDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetStarsDisabled() bool {
	if o == nil || o.StarsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.StarsDisabled
}

// GetStarsDisabledOk returns a tuple with the StarsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetStarsDisabledOk() (*bool, bool) {
	if o == nil || o.StarsDisabled == nil {
		return nil, false
	}
	return o.StarsDisabled, true
}

// HasStarsDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasStarsDisabled() bool {
	if o != nil && o.StarsDisabled != nil {
		return true
	}

	return false
}

// SetStarsDisabled gets a reference to the given bool and assigns it to the StarsDisabled field.
func (o *GeneralRepoSettings) SetStarsDisabled(v bool) {
	o.StarsDisabled = &v
}

// GetTimeTrackingDisabled returns the TimeTrackingDisabled field value if set, zero value otherwise.
func (o *GeneralRepoSettings) GetTimeTrackingDisabled() bool {
	if o == nil || o.TimeTrackingDisabled == nil {
		var ret bool
		return ret
	}
	return *o.TimeTrackingDisabled
}

// GetTimeTrackingDisabledOk returns a tuple with the TimeTrackingDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralRepoSettings) GetTimeTrackingDisabledOk() (*bool, bool) {
	if o == nil || o.TimeTrackingDisabled == nil {
		return nil, false
	}
	return o.TimeTrackingDisabled, true
}

// HasTimeTrackingDisabled returns a boolean if a field has been set.
func (o *GeneralRepoSettings) HasTimeTrackingDisabled() bool {
	if o != nil && o.TimeTrackingDisabled != nil {
		return true
	}

	return false
}

// SetTimeTrackingDisabled gets a reference to the given bool and assigns it to the TimeTrackingDisabled field.
func (o *GeneralRepoSettings) SetTimeTrackingDisabled(v bool) {
	o.TimeTrackingDisabled = &v
}

func (o GeneralRepoSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HttpGitDisabled != nil {
		toSerialize["http_git_disabled"] = o.HttpGitDisabled
	}
	if o.LfsDisabled != nil {
		toSerialize["lfs_disabled"] = o.LfsDisabled
	}
	if o.MigrationsDisabled != nil {
		toSerialize["migrations_disabled"] = o.MigrationsDisabled
	}
	if o.MirrorsDisabled != nil {
		toSerialize["mirrors_disabled"] = o.MirrorsDisabled
	}
	if o.StarsDisabled != nil {
		toSerialize["stars_disabled"] = o.StarsDisabled
	}
	if o.TimeTrackingDisabled != nil {
		toSerialize["time_tracking_disabled"] = o.TimeTrackingDisabled
	}
	return json.Marshal(toSerialize)
}

type NullableGeneralRepoSettings struct {
	value *GeneralRepoSettings
	isSet bool
}

func (v NullableGeneralRepoSettings) Get() *GeneralRepoSettings {
	return v.value
}

func (v *NullableGeneralRepoSettings) Set(val *GeneralRepoSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralRepoSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralRepoSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralRepoSettings(val *GeneralRepoSettings) *NullableGeneralRepoSettings {
	return &NullableGeneralRepoSettings{value: val, isSet: true}
}

func (v NullableGeneralRepoSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralRepoSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


